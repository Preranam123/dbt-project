# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: "jaffle_shop"
version: "1.0.0"
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: "default"

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target" # directory which will store compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In dbt, the default materialization for a model is a view. This means, when you run
# dbt run or dbt build, all of your models will be built as a view in your data platform.
# The configuration below will override this setting for models in the example folder to
# instead be materialized as tables. Any models you add to the root of the models folder will
# continue to be built as views. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.

models:
  jaffle_shop:
    +materialized: table
    example:
      +materialized: view

# Adding semantic models configuration
# Ensure that this section aligns with your version of dbt and any additional plugins you might be using.
semantic_models:
  orders:
    enabled: true
    group: sales
    meta:
      description: "Semantic model for order data"
    
    model: ref('schema.orders')

    entities:
      - name: order_id
        type: primary
      - name: customer_id
        type: foreign
      - name: store_id
        type: foreign
      - name: product_id
        type: foreign

    measures:
      - name: order_amount_usd
        description: "Total USD value of orders"
        expr: order_amount_usd
        agg: sum

      - name: order_amount_usd_avg
        description: "Average USD value of orders"
        expr: order_amount_usd
        agg: average

      - name: order_amount_usd_max
        description: "Maximum USD value of orders"
        expr: order_amount_usd
        agg: max

      - name: order_amount_usd_min
        description: "Minimum USD value of orders"
        expr: order_amount_usd
        agg: min

      - name: quick_buy_orders
        description: "Total orders bought as quick buy"
        expr: quick_buy_flag
        agg: sum_boolean

      - name: distinct_orders_count
        description: "Distinct count of orders"
        expr: order_id
        agg: count_distinct

      - name: average_order_value
        description: "Average value of orders"
        expr: order_amount_usd
        agg: average

      - name: valid_order_amount_usd
        description: "Total USD value of valid orders only"
        expr: CASE WHEN is_valid = TRUE THEN order_amount_usd ELSE 0 END
        agg: sum

      - name: p99_order_value
        description: "The 99th percentile order value"
        expr: order_amount_usd
        agg: percentile
        agg_params:
          percentile: 0.99
          use_discrete_percentile: False

      - name: median_order_value
        description: "The median order value"
        expr: order_amount_usd
        agg: median

    dimensions:
      - name: metric_time
        type: time
        expr: date_trunc('day', order_date)
        type_params:
          time_granularity: day
        description: "The date truncated to day for aggregations."

      - name: is_bulk_order
        type: categorical
        expr: CASE WHEN quantity > 10 THEN TRUE ELSE FALSE END
        description: "Categorical flag indicating whether the order is a bulk order."
